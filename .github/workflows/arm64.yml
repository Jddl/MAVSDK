name: Build and Test

on:
  push:
    branches:
    - 'main'
    tags:
    - 'v*'
  pull_request:
    branches:
    - '*'


jobs:
  coverage:
    name: coverage (ubuntu-20.04)
    runs-on: ubuntu-20.04
    env:
      NODE_OPTIONS: --max_old_space_size=4096
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./build/third_party/install
          key: ${{ github.job }}-${{ hashFiles('./third_party/**') }}
      - name: disable superbuild on cache hit
        if: steps.cache.outputs.cache-hit == 'true'
        run: echo "superbuild=-DSUPERBUILD=OFF" >> $GITHUB_ENV && echo "cmake_prefix_path=-DCMAKE_PREFIX_PATH=$(pwd)/build/third_party/install" >> $GITHUB_ENV
      - name: Install lcov
        run: sudo apt-get update && sudo apt-get install -y lcov
      - name: install pymavlink dependencies
        run: sudo apt-get install -y python3-future
      - name: configure
        run: cmake $superbuild $cmake_prefix_path -DCMAKE_BUILD_TYPE=Coverage -DASAN=ON -DWERROR=OFF -Bbuild -H.
      - name: build
        run: cmake --build build -j2
      - name: unit tests
        run: ./build/src/unit_tests_runner
      - name: system tests
        run: ./build/src/system_tests/system_tests_runner
      - name: run lcov
        run: lcov --capture --directory . --no-external --exclude "*/third_party/*"  --output-file lcov.info
      - name: check size of lcov.info
        run: |
          ls -l lcov.info
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: "./lcov.info"

  


  dockcross-manylinux2010-x64:
    name: manylinux2010-x64
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./build/manylinux2010-x64/third_party/install
          key: ${{ github.job }}-${{ hashFiles('./third_party/**') }}
      - name: disable superbuild on cache hit
        if: steps.cache.outputs.cache-hit == 'true'
        run: echo "superbuild=-DSUPERBUILD=OFF" >> $GITHUB_ENV && echo "cmake_prefix_path=-DCMAKE_PREFIX_PATH=/work/build/manylinux2010-x64/third_party/install" >> $GITHUB_ENV
      - name: install pymavlink dependencies
        run: sudo apt-get update && sudo apt-get install -y python3 python3-future
      - name: prepare mavlink headers
        run: tools/generate_mavlink_headers.sh
      - name: setup dockcross
        run: docker run --rm dockcross/manylinux2010-x64 > ./dockcross-manylinux2010-x64; chmod +x ./dockcross-manylinux2010-x64
      - name: configure
        run: ./dockcross-manylinux2010-x64 cmake $superbuild $cmake_prefix_path -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=build/manylinux2010-x64/install -DBUILD_MAVSDK_SERVER=ON -DBUILD_SHARED_LIBS=OFF -DWERROR=OFF -DMAVLINK_HEADERS=mavlink-headers/include -Bbuild/manylinux2010-x64 -H.
      - name: build
        run: ./dockcross-manylinux2010-x64 cmake --build build/manylinux2010-x64 -j2 --target install
      - name: Publish artefacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: 'build/manylinux2010-x64/install/bin/mavsdk_server'
          asset_name: 'mavsdk_server_manylinux2010-x64'
          tag: ${{ github.ref }}
          overwrite: true

  dockcross-linux-arm:
    name: linux-${{ matrix.arch_name }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        arch_name: [arm64]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: install pymavlink dependencies
        run: sudo apt-get update && sudo apt-get install -y python3 python3-future
      - name: prepare mavlink headers
        run: tools/generate_mavlink_headers.sh
      - name: setup dockcross
        run: docker run --rm mavsdk/mavsdk-dockcross-linux-${{ matrix.arch_name }}-custom > ./dockcross-linux-${{ matrix.arch_name }}-custom; chmod +x ./dockcross-linux-${{ matrix.arch_name }}-custom
      - uses: actions/cache@v2
        id: cache
        with:
          path: ./build/linux-${{ matrix.arch_name }}/third_party/install
          key: ${{ github.job }}-linux-${{ matrix.arch_name }}-${{ hashFiles('./third_party/**') }}-4
      - name: disable superbuild on cache hit
        if: steps.cache.outputs.cache-hit == 'true'
        run: echo "superbuild=-DSUPERBUILD=OFF" >> $GITHUB_ENV && echo "cmake_prefix_path=-DCMAKE_PREFIX_PATH=/work/build/linux-${{ matrix.arch_name }}/third_party/install" >> $GITHUB_ENV
      - name: configure
        run: ./dockcross-linux-${{ matrix.arch_name }}-custom /bin/bash -c "cmake $superbuild $cmake_prefix_path -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=build/linux-${{ matrix.arch_name }}/install -DBUILD_MAVSDK_SERVER=OFF -DBUILD_SHARED_LIBS=ON -DWERROR=OFF -DMAVLINK_HEADERS=mavlink-headers/include -Bbuild/linux-${{ matrix.arch_name }} -H."
      - name: build
        run: ./dockcross-linux-${{ matrix.arch_name }}-custom cmake --build build/linux-${{ matrix.arch_name }} -j2 --target install
      - name: create deb packages
        run: ./dockcross-linux-${{ matrix.arch_name }}-custom tools/create_packages.sh ./build/linux-${{ matrix.arch_name }}/install . ${{ matrix.arch_name }} libmavsdk-dev
      - name: Publish artefacts
        if: startsWith(github.ref, 'refs/tags/v')
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: '*.deb'
          tag: ${{ github.ref }}
          overwrite: true
